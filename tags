!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALLOWED_HOSTS	tests/settings.py	/^ALLOWED_HOSTS = []$/;"	v
BASE_DIR	tests/settings.py	/^BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))$/;"	v
DATABASES	tests/settings.py	/^DATABASES = {$/;"	v
DEBUG	tests/settings.py	/^DEBUG = True$/;"	v
DEFAULT_AUTO_FIELD	tests/settings.py	/^DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"$/;"	v
DjangoJsRpcConfig	django_js_rpc/apps.py	/^class DjangoJsRpcConfig(AppConfig):$/;"	c
DjangoTsApiGeneratorConfig	django-js-rpc/apps.py	/^class DjangoTsApiGeneratorConfig(AppConfig):$/;"	c
INSTALLED_APPS	tests/settings.py	/^INSTALLED_APPS = [$/;"	v
LANGUAGE_CODE	tests/settings.py	/^LANGUAGE_CODE = "en-us"$/;"	v
MIDDLEWARE	tests/settings.py	/^MIDDLEWARE = [$/;"	v
Patient	django_js_rpc/tests/test_app/models.py	/^class Patient(models.Model):$/;"	c
Patient	tests/test_app/models.py	/^class Patient(models.Model):$/;"	c
PatientViewSet	tests/test_app/views.py	/^class PatientViewSet(viewsets.ModelViewSet):$/;"	c
PatientVisit	django_js_rpc/tests/test_app/models.py	/^class PatientVisit(models.Model):$/;"	c
PatientVisit	tests/test_app/models.py	/^class PatientVisit(models.Model):$/;"	c
PatientVisitViewSet	tests/test_app/views.py	/^class PatientVisitViewSet(viewsets.ModelViewSet):$/;"	c
ROOT_URLCONF	tests/settings.py	/^ROOT_URLCONF = "django_js_rpc.tests.test_app.urls"$/;"	v
SECRET_KEY	tests/settings.py	/^SECRET_KEY = "test_secret_key"$/;"	v
STATIC_URL	tests/settings.py	/^STATIC_URL = "\/static\/"$/;"	v
TEMPLATES	tests/settings.py	/^TEMPLATES = [$/;"	v
TIME_ZONE	tests/settings.py	/^TIME_ZONE = "UTC"$/;"	v
TS_API_OUTPUT_DIR	tests/settings.py	/^TS_API_OUTPUT_DIR = "test_output"$/;"	v
TypeScriptAPIGenerator	django-js-rpc/generator.py	/^class TypeScriptAPIGenerator:$/;"	c
USE_I18N	tests/settings.py	/^USE_I18N = True$/;"	v
USE_L10N	tests/settings.py	/^USE_L10N = True$/;"	v
USE_TZ	tests/settings.py	/^USE_TZ = True$/;"	v
__init__	django-js-rpc/generator.py	/^    def __init__(self):$/;"	f
analyze_views	django-js-rpc/generator.py	/^    def analyze_views(self):$/;"	f
app_config	tests/test_generator.py	/^    app_config = apps.get_app_config("django_js_rpc")$/;"	v
date	django_js_rpc/tests/test_app/models.py	/^    date = models.DateField()$/;"	v
date	tests/test_app/models.py	/^    date = models.DateField()$/;"	v
default_auto_field	django-js-rpc/apps.py	/^    default_auto_field = "django.db.models.BigAutoField"$/;"	v
default_auto_field	django_js_rpc/apps.py	/^    default_auto_field = 'django.db.models.BigAutoField'$/;"	v
entry_points	setup.py	/^    entry_points={$/;"	v
extract_url_params	django-js-rpc/generator.py	/^    def extract_url_params(self, path):$/;"	f
extras_require	setup.py	/^    extras_require={$/;"	v
generate_typescript	django-js-rpc/generator.py	/^    def generate_typescript(self, views):$/;"	f
generator	django-js-rpc/generator.py	/^generator = TypeScriptAPIGenerator()$/;"	v
generator	tests/test_generator.py	/^def generator():$/;"	f
get_queryset	tests/test_app/views.py	/^    def get_queryset(self):$/;"	f
get_view_methods	django-js-rpc/generator.py	/^    def get_view_methods(self, view):$/;"	f
get_view_name	django-js-rpc/generator.py	/^    def get_view_name(self, view):$/;"	f
include_package_data	setup.py	/^    include_package_data=True,$/;"	v
install_requires	setup.py	/^    install_requires=[$/;"	v
name	django-js-rpc/apps.py	/^    name = "django_ts_api_generator"$/;"	v
name	django_js_rpc/apps.py	/^    name = 'django_js_rpc'$/;"	v
name	django_js_rpc/tests/test_app/models.py	/^    name = models.CharField(max_length=100)$/;"	v
name	setup.py	/^    name="django-js-rpc",$/;"	v
name	tests/test_app/models.py	/^    name = models.CharField(max_length=100)$/;"	v
output_dir	django-js-rpc/apps.py	/^        output_dir = getattr(settings, "TS_API_OUTPUT_DIR", "")$/;"	v
output_dir	django_js_rpc/apps.py	/^        output_dir = getattr(settings, 'JS_RPC_OUTPUT_DIR', '')$/;"	v
output_file	django-js-rpc/apps.py	/^        output_file = os.path.join(output_dir, "rpcClient.ts")$/;"	v
output_file	django_js_rpc/apps.py	/^        output_file = os.path.join(output_dir, 'rpcClient.ts')$/;"	v
packages	setup.py	/^    packages=find_packages(include=["django_js_rpc", "django_js_rpc.*"]),$/;"	v
param_pattern	django-js-rpc/generator.py	/^        param_pattern = r'\\(\\?P<(\\w+)>[^)]+\\)'$/;"	v
params	django-js-rpc/generator.py	/^        params = re.findall(param_pattern, path)$/;"	v
patient	django_js_rpc/tests/test_app/models.py	/^    patient = models.ForeignKey(Patient, on_delete=models.CASCADE)$/;"	v
patient	tests/test_app/models.py	/^    patient = models.ForeignKey(Patient, on_delete=models.CASCADE)$/;"	v
patient_view	tests/test_generator.py	/^    patient_view = views["PatientViewSet"]$/;"	v
pytest_configure	tests/conftest.py	/^def pytest_configure():$/;"	f
queryset	tests/test_app/views.py	/^    queryset = Patient.objects.all()$/;"	v
queryset	tests/test_app/views.py	/^    queryset = PatientVisit.objects.all()$/;"	v
ready	django-js-rpc/apps.py	/^    def ready(self):$/;"	f
ready	django_js_rpc/apps.py	/^    def ready(self):$/;"	f
resolver	django-js-rpc/generator.py	/^        resolver = get_resolver()$/;"	v
router	tests/test_app/urls.py	/^router = DefaultRouter()$/;"	v
test_analyze_views	tests/test_generator.py	/^def test_analyze_views(generator):$/;"	f
test_app_config_ready	tests/test_generator.py	/^def test_app_config_ready():$/;"	f
test_app_urls	tests/test_generator.py	/^def test_app_urls():$/;"	f
test_generate_typescript	tests/test_generator.py	/^def test_generate_typescript(generator):$/;"	f
ts_path	django-js-rpc/generator.py	/^        ts_path = re.sub(param_pattern, r'${{\\1}}', path)$/;"	v
typescript_code	django-js-rpc/apps.py	/^        typescript_code = generator.generate_typescript(views)$/;"	v
typescript_code	django_js_rpc/apps.py	/^        typescript_code = generator.generate_typescript(views)$/;"	v
typescript_code	tests/test_generator.py	/^    typescript_code = generator.generate_typescript(views)$/;"	v
urlpatterns	tests/test_app/urls.py	/^urlpatterns = [$/;"	v
version	setup.py	/^    version="0.1",$/;"	v
view_name	django-js-rpc/generator.py	/^                view_name = self.get_view_name(pattern.callback)$/;"	v
views	django-js-rpc/apps.py	/^        views = generator.analyze_views()$/;"	v
views	django-js-rpc/generator.py	/^        views = {}$/;"	v
views	django_js_rpc/apps.py	/^        views = generator.analyze_views()$/;"	v
views	tests/test_generator.py	/^    views = generator.analyze_views()$/;"	v
views	tests/test_generator.py	/^    views = {$/;"	v
visit_view	tests/test_generator.py	/^    visit_view = views["PatientVisitViewSet"]$/;"	v
